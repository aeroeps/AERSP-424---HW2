// This is ot make sure  that it wait for one of the tools to become avilible
        while (tools[tool1] == 0 || tools[tool2] == 0)
        {
            if (tools[tool1] == 0)
            {
                tools[tool1] --;
                cout << "Robot " << i << " acquired tool " << tool1 << " and starts performing a task." << endl; 
                workTime[i] += time_to_tool;
            }

            if (tools[tool2] == 0)
            {
                tools[tool2] --;
                cout << "Robot " << i << " acquired tool " << tool2 << " and starts performing a task." << endl; 
                workTime[i] += time_to_tool;
            }
        }


// This tells the program which tool is which
        int tool1 = i;
        int tool2 = (i + 1);



int Question_2 () 
{
    vector<int> workTime(number_robots);
    vector<int> tools(number_tools, 2); // This is the number of robots that need each tool

    int robotNumber1 = 0;
    int robotNumber2 = 0;

    bool robotFree1 = true;
    bool robotFree2 = true;

    // Now we get into the simuation of teh task 
    for (int i=0; i<3; i++)
    { 
        // Identifying what robot we are working with
        robotNumber1 = i;
        robotNumber2 = i+2;

        // Robots get tools
        int tool1 = i;
        int tool2 = (i + 1);
        
        // Printing out which tool is working
        if (robotFree1 == true)
        {
            cout << "Robot " << robotNumber1 << " is collecting data" << endl;

        }
        if (robotFree1 == true)
        {
            cout << "Robot " << robotNumber2 << " is collecting data" << endl;
        }

        if (robotFree1 == true)
        {   
            cout << "Robot " << robotNumber1 << " acquired tool " << tool1 << " and starts performing a task." << endl;
            cout << "Robot " << robotNumber1 << " acquired tool " << tool2 << " and starts performing a task." << endl;
            robotFree1 = false;
            workTime[i] += time_to_tool;
        }
        
        
        

        

        cout << "Robot " << i << " acquired tool " << tool1 << " and starts performing a task." << endl; 

        


        workTime[i] += time_to_complete;
        cout << "Robot " << i << " finished the task and returning the tools." << endl;

        tools[tool1] ++;
        tools[tool2] ++;
    }

    int wholeTime = *max_element(workTime.begin(), workTime.end());
    return wholeTime;
}